# Generated by Django 2.2 on 2019-10-14 18:41

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AsyncTaskItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('queue', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.CharField(blank=True, max_length=255)),
                ('task_module', models.CharField(max_length=255)),
                ('task_class', models.CharField(max_length=255)),
                ('payload', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('success_result', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('max_retries', models.PositiveSmallIntegerField()),
                ('timeout', models.PositiveSmallIntegerField()),
            ],
            options={
                'db_table': 'alliance_utils_async_task_item',
            },
        ),
        migrations.CreateModel(
            name='AsyncTaskStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Queued'), (2, 'Processing'), (3, 'Succeeded'), (4, 'Failed')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('error', models.TextField(blank=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status', to='allianceutils.AsyncTaskItem')),
            ],
            options={
                'db_table': 'alliance_utils_async_task_status',
            },
        ),
    ]
